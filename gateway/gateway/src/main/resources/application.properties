spring.application.name=api-gateway
server.port=8765
eureka.client.serviceUrl.defaultZone:http://host.docker.internal:8761/eureka
eureka.client.register-with-eureka=true
spring.config.import=optional:configserver: instead
eureka.instance.prefer-ip-address=true
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.loadbalancer.ribbon.enabled=false
eureka.instance.instance-id=${spring.application.name}-${random.uuid}
#spring.cloud.gateway.default-filters=TokenRelay
spring.cloud.gateway.routes[0].id=profilelinkedin-service
spring.cloud.gateway.routes[0].uri=lb://profilelinkedin-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/profilelinkedin

spring.cloud.gateway.routes[1].id=ao-service
spring.cloud.gateway.routes[1].uri=lb://ao-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/ao

spring.cloud.gateway.routes[2].id=profils-service
spring.cloud.gateway.routes[2].uri=lb://profils-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/profils-service
#spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/prestalink-realm
#spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-id=gateway-client
#spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-secret=LPccYmrpAcjPca67f6cUXrqK7QRP8Ebo
#spring.security.oauth2.client.registration.spring-cloud-gateway-client.provider=keycloak
#spring.security.oauth2.client.registration.spring-cloud-gateway-client.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.spring-cloud-gateway-client.redirect-uri=http://localhost:8080/login/oauth2/code/gateway-client
#spring.main.allow-bean-definition-overriding=true

